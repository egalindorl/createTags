{"ast":null,"code":"var _jsxFileName = \"/mnt/d/semestre6/ReactProjects/create-tags/src/App.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport FetchRandomUser from \"./components/FetchTags\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App1 extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      visible: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(FetchRandomUser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const initialList = [];\n\n\nconst listReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      return { ...state,\n        list: state.list.concat({\n          name: action.name,\n          id: action.id\n        })\n      };\n\n    default:\n      throw new Error();\n  }\n}; // const App = () => {\n//   const [listData, dispatchListData] = React.useReducer(listReducer, {\n//     list: initialList,\n//     isShowList: true,\n//   });\n//   const [name, setName] = React.useState('');\n//   function handleChange(event) {\n//     setName(event.target.value);\n//   }\n//   function handleAdd() {\n//     dispatchListData({ type: 'ADD_ITEM', name, id: uuidv4() });\n//     setName('');\n//   }\n//   return (\n//     <div>\n//       <AddItem\n//         name={name}\n//         onChange={handleChange}\n//         onAdd={handleAdd}\n//       />\n//       <List list={listData.list} />\n//     </div>\n//   );\n// };\n// const AddItem = ({ name, onChange, onAdd }) => (\n//   <div>\n//     <input type=\"text\" value={name} onChange={onChange} />\n//     <button type=\"button\" onClick={onAdd}>\n//       Add\n//     </button>\n//   </div>\n// );\n// const List = ({ list }) => (\n//   <ul>\n//     <text> List of tags </text>\n//     {list.map((item) => (\n//       <li key={item.id}>{item.name}</li>\n//     ))}\n//   </ul>\n// );\n\n\nexport default App1;","map":{"version":3,"sources":["/mnt/d/semestre6/ReactProjects/create-tags/src/App.js"],"names":["React","Component","v4","uuidv4","FetchRandomUser","App1","state","visible","render","listReducer","action","type","list","concat","name","id","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,eAAP,MAA4B,wBAA5B;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACNC,MAAAA,OAAO,EAAE;AADH,KADmB;AAAA;;AAM3BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAZ0B,C,CAc7B;;;AAEA,MAAMC,WAAW,GAAG,CAACH,KAAD,EAAQI,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELM,QAAAA,IAAI,EAAEN,KAAK,CAACM,IAAN,CAAWC,MAAX,CAAkB;AAAEC,UAAAA,IAAI,EAAEJ,MAAM,CAACI,IAAf;AAAqBC,UAAAA,EAAE,EAAEL,MAAM,CAACK;AAAhC,SAAlB;AAFD,OAAP;;AAIF;AACE,YAAM,IAAIC,KAAJ,EAAN;AAPJ;AASD,CAVD,C,CAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeX,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport FetchRandomUser from \"./components/FetchTags\";\n\nclass App1 extends Component {\n  state = {\n    visible: true\n  };\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <FetchRandomUser />\n      </div>\n    );\n  }\n}\n// const initialList = [];\n\nconst listReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      return {\n        ...state,\n        list: state.list.concat({ name: action.name, id: action.id }),\n      };\n    default:\n      throw new Error();\n  }\n};\n\n// const App = () => {\n//   const [listData, dispatchListData] = React.useReducer(listReducer, {\n//     list: initialList,\n//     isShowList: true,\n//   });\n//   const [name, setName] = React.useState('');\n\n//   function handleChange(event) {\n//     setName(event.target.value);\n//   }\n\n//   function handleAdd() {\n//     dispatchListData({ type: 'ADD_ITEM', name, id: uuidv4() });\n\n//     setName('');\n//   }\n\n//   return (\n//     <div>\n//       <AddItem\n//         name={name}\n//         onChange={handleChange}\n//         onAdd={handleAdd}\n//       />\n\n//       <List list={listData.list} />\n//     </div>\n//   );\n// };\n\n// const AddItem = ({ name, onChange, onAdd }) => (\n//   <div>\n//     <input type=\"text\" value={name} onChange={onChange} />\n//     <button type=\"button\" onClick={onAdd}>\n//       Add\n//     </button>\n//   </div>\n// );\n\n// const List = ({ list }) => (\n//   <ul>\n//     <text> List of tags </text>\n//     {list.map((item) => (\n//       <li key={item.id}>{item.name}</li>\n//     ))}\n//   </ul>\n// );\n\nexport default App1;"]},"metadata":{},"sourceType":"module"}